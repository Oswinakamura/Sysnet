//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sysnet
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PersonaEntities : DbContext
    {
        public PersonaEntities()
            : base("name=PersonaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Persona> Personas { get; set; }
    
        public virtual ObjectResult<Sp_Crud_Result> Sp_Crud(Nullable<int> id, string identificacion, string tipoIdentificacion, string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, string direccion, string telefono, string email, string ocupacion, Nullable<System.DateTime> fechaNacimiento, string foto, string option)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            var tipoIdentificacionParameter = tipoIdentificacion != null ?
                new ObjectParameter("tipoIdentificacion", tipoIdentificacion) :
                new ObjectParameter("tipoIdentificacion", typeof(string));
    
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("primerNombre", primerNombre) :
                new ObjectParameter("primerNombre", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("segundoNombre", segundoNombre) :
                new ObjectParameter("segundoNombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("primerApellido", primerApellido) :
                new ObjectParameter("primerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("segundoApellido", segundoApellido) :
                new ObjectParameter("segundoApellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var ocupacionParameter = ocupacion != null ?
                new ObjectParameter("ocupacion", ocupacion) :
                new ObjectParameter("ocupacion", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Crud_Result>("Sp_Crud", idParameter, identificacionParameter, tipoIdentificacionParameter, primerNombreParameter, segundoNombreParameter, primerApellidoParameter, segundoApellidoParameter, direccionParameter, telefonoParameter, emailParameter, ocupacionParameter, fechaNacimientoParameter, fotoParameter, optionParameter);
        }

        public System.Data.Entity.DbSet<Sysnet.Models.PersonaClass> PersonaClasses { get; set; }
    }
}
